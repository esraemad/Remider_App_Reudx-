{"version":3,"sources":["components/App.js","actions/index.js","types.js","reducers/index.js","index.js","images/logo.jpg"],"names":["App","state","text","date","Date","render_Reminders","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","remove_Reminder","src","logo","alt","type","value","this","placeholder","onChange","e","setState","target","placeholderText","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","add_Reminder","clear_Reminder","Component","connect","action","console","log","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qRAOMA,E,2MACJC,MAAQ,CACNC,KAAM,GACNC,KAAM,IAAIC,M,EAGZC,iBAAmB,WAAO,IAChBC,EAAc,EAAKC,MAAnBD,UACR,OACE,wBAAIE,UAAU,cACXF,EAAUG,IAAI,SAACC,GACd,OACE,wBAAIC,IAAKD,EAASE,GAAIJ,UAAU,mBAC9B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAKM,EAASP,OAAOW,WACtC,yBACEN,UAAU,2BACVO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,MAEnD,uBAAGJ,UAAU,2B,wEASjB,IAAD,OACP,OACE,yBAAKA,UAAU,OACb,yBAAKS,IAAKC,IAAMC,IAAI,QACpB,6BACA,yBAAKX,UAAU,kBACb,oDACA,8BAEF,2BACEA,UAAU,eACVY,KAAK,OACLC,MAAOC,KAAKrB,MAAMC,KAClBqB,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAExB,KAAMuB,EAAEE,OAAON,WAElD,kBAAC,IAAD,CACEb,UAAU,eACVa,MAAOC,KAAKrB,MAAME,KAClByB,gBAAgB,aAChBC,SAAUP,KAAKrB,MAAME,KACrBqB,SAAU,SAACrB,GACT,EAAKuB,SAAS,CAAEvB,UAElB2B,gBAAc,EACdC,WAAW,QACXC,WAAW,uBACXC,YAAY,SAEd,4BACElB,QAAS,WACP,EAAKR,MAAM2B,aAAa,EAAKjC,MAAMC,KAAM,EAAKD,MAAME,MACpD,EAAKuB,SAAS,CAAExB,KAAM,GAAIC,KAAM,MAElCK,UAAU,6BALZ,gBASCc,KAAKjB,mBACN,4BACEU,QAAS,kBAAM,EAAKR,MAAM4B,kBAC1B3B,UAAU,0CAFZ,wB,GAnEU4B,aA0FHC,cACb,SAACpC,GACC,MAAO,CACLK,UAAWL,IAGf,CACEiC,aCtGwB,SAAChC,EAAMC,GACjC,IAAMmC,EAAS,CACblB,KCJwB,eDKxBlB,OACAC,QAGF,OADAoC,QAAQC,IAAI,MAAOF,GACZA,GDgGLtB,gBC7F2B,SAACJ,GAC9B,IAAM0B,EAAS,CACblB,KCb2B,kBDc3BR,MAIF,OADA2B,QAAQC,IAAI,SAAUF,GACfA,GDuFLH,eCpF0B,WAI5B,MAHe,CACbf,KCtB2B,qBF+FhBiB,CAWbrC,G,wBG7EaM,EA7BG,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIqC,EAAW,uCACpChC,EAAY,KAIhB,OAFAL,EAAQwC,sBAAY,aDLM,iBCOtBH,EAAOlB,MACTd,EAAS,sBACJL,GADI,CAEP,CAAEC,KAAMoC,EAAOpC,KAAMC,KAAMmC,EAAOnC,KAAMS,GAAI8B,KAAKC,YAEnDC,sBAAY,YAAatC,GAEzBiC,QAAQC,IAAI,gBAAiBlC,GACtBA,GDdoB,oBCelBgC,EAAOlB,MAChBd,EAAYL,EAAM4C,OAAO,SAACnC,GAAD,OAAcA,EAASE,KAAO0B,EAAO1B,KAC9DgC,sBAAY,YAAatC,GACzBiC,QAAQC,IAAI,gBAAiBlC,GACtBA,GDlBoB,oBCmBlBgC,EAAOlB,MAChBd,EAAY,GACZsC,sBAAY,YAAatC,GACzBiC,QAAQC,IAAI,gBAAiBlC,GACtBA,GAEAL,GCfL6C,G,qBAAQC,YAAYzC,IAE1B0C,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,U,mBClB1BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.de6f44de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport logo from \"../images/logo.jpg\";\nimport { add_Reminder, remove_Reminder, clear_Reminder } from \"../actions\";\nclass App extends Component {\n  state = {\n    text: \"\",\n    date: new Date(),\n  };\n\n  render_Reminders = () => {\n    const { reminders } = this.props;\n    return (\n      <ul className=\"list-group\">\n        {reminders.map((reminder) => {\n          return (\n            <li key={reminder.id} className=\"list-group-item\">\n              <div>{reminder.text}</div>\n              <div>{moment(new Date(reminder.date)).fromNow()}</div>\n              <div\n                className=\"closeIcon btn btn-danger\"\n                onClick={() => this.props.remove_Reminder(reminder.id)}\n              >\n                <i className=\"far fa-trash-alt\"></i>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={logo} alt=\"pic\" />\n        <br></br>\n        <div className=\"reminder-title\">\n          <h2>What Should You Do ?</h2>\n          <br></br>\n        </div>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          value={this.state.text}\n          placeholder=\"Enter What You think ... ?\"\n          onChange={(e) => this.setState({ text: e.target.value })}\n        />\n        <DatePicker\n          className=\"form-control\"\n          value={this.state.date}\n          placeholderText=\"Enter Date\"\n          selected={this.state.date}\n          onChange={(date) => {\n            this.setState({ date });\n          }}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\n          timeCaption=\"time\"\n        />\n        <button\n          onClick={() => {\n            this.props.add_Reminder(this.state.text, this.state.date);\n            this.setState({ text: \"\", date: \"\" });\n          }}\n          className=\"btn btn-primary btn-block\"\n        >\n          Add Reminder\n        </button>\n        {this.render_Reminders()}\n        <button\n          onClick={() => this.props.clear_Reminder()}\n          className=\"btn btn-danger btn-block clearReminder\"\n        >\n          Clear Reminders\n        </button>\n      </div>\n    );\n  }\n}\n\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         clear_Reminder : () => dispatch(clear_Reminder())\n//     }\n// }\n\n// function mapStateToProps(state) {\n//     return {\n//         reminders: state\n//     }\n// }\n\nexport default connect(\n  (state) => {\n    return {\n      reminders: state,\n    };\n  },\n  {\n    add_Reminder,\n    remove_Reminder,\n    clear_Reminder,\n  }\n)(App);\n","import { ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS } from \"../types\";\n\nexport const add_Reminder = (text, date) => {\n  const action = {\n    type: ADD_REMINDER,\n    text,\n    date,\n  };\n  console.log(\"Add\", action);\n  return action;\n};\n\nexport const remove_Reminder = (id) => {\n  const action = {\n    type: REMOVE_REMINDER,\n    id,\n  };\n\n  console.log(\"Remove\", action);\n  return action;\n};\n\nexport const clear_Reminder = () => {\n  const action = {\n    type: CLEAR_REMINDERS,\n  };\n  return action;\n};\n","export const ADD_REMINDER = \"ADD_REMINDER\";\nexport const REMOVE_REMINDER = \"REMOVE_REMINDER\";\nexport const CLEAR_REMINDERS = \"CLEAR_REMINDERS\";\n","import { ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS } from \"../types\";\nimport { bake_cookie, read_cookie } from \"sfcookies\";\nconst reminders = (state = [], action) => {\n  let reminders = null;\n\n  state = read_cookie(\"reminders\");\n\n  if (action.type === ADD_REMINDER) {\n    reminders = [\n      ...state,\n      { text: action.text, date: action.date, id: Math.random() },\n    ];\n    bake_cookie(\"reminders\", reminders);\n\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else if (action.type === REMOVE_REMINDER) {\n    reminders = state.filter((reminder) => reminder.id !== action.id);\n    bake_cookie(\"reminders\", reminders);\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else if (action.type === CLEAR_REMINDERS) {\n    reminders = [];\n    bake_cookie(\"reminders\", reminders);\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else {\n    return state;\n  }\n};\n\nexport default reminders;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reminders from \"./reducers\";\n\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nconst store = createStore(reminders);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.3917ebed.jpg\";"],"sourceRoot":""}