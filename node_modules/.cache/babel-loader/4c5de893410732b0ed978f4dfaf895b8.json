{"ast":null,"code":"import { ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS } from '../types';\nimport { bake_cookie, read_cookie } from 'sfcookies';\n\nconst reminders = (state = [], action) => {\n  let reminders = null;\n  state = read_cookie('reminders');\n\n  if (action.type === ADD_REMINDER) {\n    reminders = [...state, {\n      text: action.text,\n      date: action.date,\n      id: Math.random()\n    }];\n    bake_cookie('reminders', reminders);\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else if (action.type === REMOVE_REMINDER) {\n    reminders = state.filter(reminder => reminder.id !== action.id);\n    bake_cookie('reminders', reminders);\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else if (action.type === CLEAR_REMINDERS) {\n    reminders = [];\n    bake_cookie('reminders', reminders);\n    console.log(\"from reducer \", reminders);\n    return reminders;\n  } else {\n    return state;\n  }\n};\n\nexport default reminders;","map":{"version":3,"sources":["D:\\ITI\\1React - Practise\\reminderApp\\reminderApp-master\\src\\reducers\\index.js"],"names":["ADD_REMINDER","REMOVE_REMINDER","CLEAR_REMINDERS","bake_cookie","read_cookie","reminders","state","action","type","text","date","id","Math","random","console","log","filter","reminder"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,UAA7D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAA0C,WAA1C;;AACA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAC,EAAP,EAAYC,MAAZ,KAAuB;AACrC,MAAIF,SAAS,GAAG,IAAhB;AAEAC,EAAAA,KAAK,GAAGF,WAAW,CAAC,WAAD,CAAnB;;AAEA,MAAGG,MAAM,CAACC,IAAP,KAAgBR,YAAnB,EAAgC;AAC5BK,IAAAA,SAAS,GAAG,CAAC,GAAGC,KAAJ,EAAY;AAACG,MAAAA,IAAI,EAAEF,MAAM,CAACE,IAAd;AAAqBC,MAAAA,IAAI,EAACH,MAAM,CAACG,IAAjC;AAAwCC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL;AAA5C,KAAZ,CAAZ;AACAV,IAAAA,WAAW,CAAC,WAAD,EAAcE,SAAd,CAAX;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BV,SAA5B;AACA,WAAOA,SAAP;AACH,GAND,MAOK,IAAKE,MAAM,CAACC,IAAP,KAAgBP,eAArB,EAAsC;AACvCI,IAAAA,SAAS,GAAGC,KAAK,CAACU,MAAN,CAAaC,QAAQ,IAAIA,QAAQ,CAACN,EAAT,KAAgBJ,MAAM,CAACI,EAAhD,CAAZ;AACAR,IAAAA,WAAW,CAAC,WAAD,EAAcE,SAAd,CAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BV,SAA5B;AACA,WAAOA,SAAP;AACH,GALI,MAMA,IAAKE,MAAM,CAACC,IAAP,KAAgBN,eAArB,EAAsC;AACvCG,IAAAA,SAAS,GAAG,EAAZ;AACAF,IAAAA,WAAW,CAAC,WAAD,EAAcE,SAAd,CAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BV,SAA5B;AACA,WAAOA,SAAP;AACH,GALI,MAOA;AACD,WAAOC,KAAP;AACH;AACJ,CA5BD;;AA8BA,eAAeD,SAAf","sourcesContent":["import {ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS} from '../types'\nimport { bake_cookie, read_cookie }  from 'sfcookies'\nconst reminders = (state=[] , action) => {\n    let reminders = null;\n\n    state = read_cookie('reminders')\n\n    if(action.type === ADD_REMINDER){\n        reminders = [...state , {text: action.text , date:action.date , id: Math.random()}]\n        bake_cookie('reminders', reminders)\n\n        console.log(\"from reducer \",reminders)\n        return reminders\n    } \n    else if ( action.type === REMOVE_REMINDER) {\n        reminders = state.filter(reminder => reminder.id !== action.id)\n        bake_cookie('reminders', reminders)\n        console.log(\"from reducer \",reminders)\n        return reminders\n    }\n    else if ( action.type === CLEAR_REMINDERS) {\n        reminders = []\n        bake_cookie('reminders', reminders)\n        console.log(\"from reducer \",reminders)\n        return reminders\n    }\n    \n    else {\n        return state\n    }\n}\n\nexport default reminders"]},"metadata":{},"sourceType":"module"}