{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITI\\\\1React - Practise\\\\reminderApp\\\\reminderApp-master\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; // import logo from './reminder.png'\n\nimport logo from './/';\nimport { add_Reminder, remove_Reminder, clear_Reminder } from '../actions';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: '',\n      date: new Date()\n    };\n\n    this.render_Reminders = () => {\n      const reminders = this.props.reminders;\n      return React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, reminders.map(reminder => {\n        return React.createElement(\"li\", {\n          key: reminder.id,\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, reminder.text), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, moment(new Date(reminder.date)).fromNow()), React.createElement(\"div\", {\n          className: \"closeIcon btn btn-danger\",\n          onClick: () => this.props.remove_Reminder(reminder.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"X\"));\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"reminder-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"What Should U Do ?\")), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.text,\n      placeholder: \"Enter What U think ... ?\",\n      onChange: e => this.setState({\n        text: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      className: \"form-control\",\n      value: this.state.date,\n      placeholderText: \"Enter Date\",\n      selected: this.state.date,\n      onChange: date => {\n        this.setState({\n          date\n        });\n      },\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      timeCaption: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.props.add_Reminder(this.state.text, this.state.date);\n        this.setState({\n          text: '',\n          date: ''\n        });\n      },\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add Reminder\"), this.render_Reminders(), React.createElement(\"button\", {\n      onClick: () => this.props.clear_Reminder(),\n      className: \"btn btn-danger btn-block clearReminder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Clear Reminders\"));\n  }\n\n} // function mapDispatchToProps(dispatch) {\n//     return {\n//         clear_Reminder : () => dispatch(clear_Reminder())\n//     }\n// }\n// function mapStateToProps(state) {\n//     return {\n//         reminders: state\n//     }\n// }\n\n\nexport default connect(state => {\n  return {\n    reminders: state\n  };\n}, {\n  add_Reminder,\n  remove_Reminder,\n  clear_Reminder\n})(App);","map":{"version":3,"sources":["D:\\ITI\\1React - Practise\\reminderApp\\reminderApp-master\\src\\components\\App.js"],"names":["React","Component","connect","moment","DatePicker","logo","add_Reminder","remove_Reminder","clear_Reminder","App","state","text","date","Date","render_Reminders","reminders","props","map","reminder","id","fromNow","render","e","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,SAASC,YAAT,EAAwBC,eAAxB,EAA0CC,cAA1C,QAAgE,YAAhE;;AACA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBS,KADwB,GAChB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAFF,KADgB;;AAAA,SAOxBC,gBAPwB,GAOL,MAAM;AAAA,YACdC,SADc,GACA,KAAKC,KADL,CACdD,SADc;AAErB,aACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAESA,SAAS,CAACE,GAAV,CAAcC,QAAQ,IAAI;AACvB,eACI;AAAI,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,QAAQ,CAACP,IAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMR,MAAM,CAAC,IAAIU,IAAJ,CAASK,QAAQ,CAACN,IAAlB,CAAD,CAAN,CAAgCQ,OAAhC,EAAN,CAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAA0C,UAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWT,eAAX,CAA2BW,QAAQ,CAACC,EAApC,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH,OARA,CAFT,CADJ;AAgBH,KAzBuB;AAAA;;AA2BxBE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEhB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CAFJ,EAKI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,IAHtB;AAII,MAAA,WAAW,EAAC,0BAJhB;AAKI,MAAA,QAAQ,EAAGW,CAAD,IAAO,KAAKC,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAAEW,CAAC,CAACE,MAAF,CAASC;AAAhB,OAAd,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAYI,oBAAC,UAAD;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,IAFtB;AAGI,MAAA,eAAe,EAAC,YAHpB;AAII,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,IAJzB;AAKI,MAAA,QAAQ,EAAGA,IAAD,IAAU;AAAC,aAAKW,QAAL,CAAc;AAACX,UAAAA;AAAD,SAAd;AAAsB,OAL/C;AAMI,MAAA,cAAc,MANlB;AAOI,MAAA,UAAU,EAAC,OAPf;AAQI,MAAA,UAAU,EAAC,sBARf;AASI,MAAA,WAAW,EAAC,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAuBI;AACI,MAAA,OAAO,EAAG,MAAM;AACZ,aAAKI,KAAL,CAAWV,YAAX,CAAwB,KAAKI,KAAL,CAAWC,IAAnC,EAA0C,KAAKD,KAAL,CAAWE,IAArD;AACA,aAAKW,QAAL,CAAc;AAACZ,UAAAA,IAAI,EAAE,EAAP;AAAYC,UAAAA,IAAI,EAAE;AAAlB,SAAd;AACH,OAJL;AAKI,MAAA,SAAS,EAAC,2BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBJ,EAgCK,KAAKE,gBAAL,EAhCL,EAiCI;AACI,MAAA,OAAO,EAAI,MAAM,KAAKE,KAAL,CAAWR,cAAX,EADrB;AAEI,MAAA,SAAS,EAAC,wCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAjCJ,CADJ;AA0CH;;AAtEuB,C,CAyE5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,OAAO,CAACQ,KAAK,IAAI;AAC5B,SAAO;AACHK,IAAAA,SAAS,EAAEL;AADR,GAAP;AAGH,CAJqB,EAIlB;AACAJ,EAAAA,YADA;AAEAC,EAAAA,eAFA;AAGAC,EAAAA;AAHA,CAJkB,CAAP,CASbC,GATa,CAAf","sourcesContent":["import React , {Component} from 'react'\nimport {connect } from 'react-redux'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import logo from './reminder.png'\nimport logo from './/'\nimport { add_Reminder , remove_Reminder , clear_Reminder } from '../actions'\nclass App extends Component {\n    state = {\n        text: '',\n        date: new Date()\n    }\n\n\n    render_Reminders = () => {\n        const {reminders} =  this.props ;\n        return (\n            <ul className=\"list-group\">\n                {\n                     reminders.map(reminder => {\n                        return (\n                            <li key={reminder.id} className='list-group-item'>\n                                <div>{reminder.text}</div>\n                                <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                                <div className=\"closeIcon btn btn-danger\" onClick={() => this.props.remove_Reminder(reminder.id)}>X</div>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n       \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <img src={logo} />\n                <div className=\"reminder-title\">\n                    <h2>What Should U Do ?</h2>\n                </div>\n                <input \n                    className=\"form-control\"\n                    type=\"text\" \n                    value={this.state.text}\n                    placeholder=\"Enter What U think ... ?\"\n                    onChange={(e) => this.setState({text: e.target.value})}\n                />\n                <DatePicker\n                    className=\"form-control\"\n                    value={this.state.date}\n                    placeholderText=\"Enter Date\"\n                    selected={this.state.date}\n                    onChange={(date) => {this.setState({date})}}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    timeCaption=\"time\"\n                />\n                <button \n                    onClick={ () => {\n                        this.props.add_Reminder(this.state.text , this.state.date)\n                        this.setState({text: '' , date: ''})\n                    }}\n                    className=\"btn btn-primary btn-block\"\n                >\n                    Add Reminder\n                </button>\n                {this.render_Reminders()}\n                <button \n                    onClick ={ () => this.props.clear_Reminder()}\n                    className=\"btn btn-danger btn-block clearReminder\"\n                >\n                    Clear Reminders\n                </button>\n            </div>\n        )\n    }\n}\n\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         clear_Reminder : () => dispatch(clear_Reminder())\n//     }\n// }\n\n// function mapStateToProps(state) {\n//     return {\n//         reminders: state\n//     }\n// }\n\nexport default connect(state => {\n    return {\n        reminders: state\n    }\n} , {\n    add_Reminder,\n    remove_Reminder,\n    clear_Reminder\n}\n)(App)"]},"metadata":{},"sourceType":"module"}